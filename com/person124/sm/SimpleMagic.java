package com.person124.sm;

import net.minecraft.block.Block;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.entity.RenderItem;
import net.minecraft.client.resources.model.ModelResourceLocation;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.Item;
import net.minecraft.item.ItemArmor.ArmorMaterial;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.common.util.EnumHelper;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.Mod.Instance;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

import com.person124.sm.common.SMCommonProxy;
import com.person124.sm.element.Base;
import com.person124.sm.element.Earth;
import com.person124.sm.element.Fire;
import com.person124.sm.element.Fragor;
import com.person124.sm.element.Life;
import com.person124.sm.element.Limbo;
import com.person124.sm.event.EventEntityDammage;

@Mod(modid = "simplemagic", name = "Simple Magic", version = "0.3.2")
public class SimpleMagic {

	@Instance("simplemagic")
	public static SimpleMagic instance;

	@SidedProxy(clientSide = "com.person124.sm.client.SMClientProxy", serverSide = "com.person124.sm.common.SMCommonProxy")
	public static SMCommonProxy proxy;

	@SideOnly(Side.CLIENT)
	private static RenderItem renderItem;
	
	private static boolean isClient;

	public static CreativeTabs smTab = new SMTab(CreativeTabs.getNextID(), "SMTab");
	public static final ArmorMaterial ELEMENT_MINOR_ARMOR_MATERIAL = EnumHelper.addArmorMaterial("ELEMENTMINOR", "simplemagic:EleMinor", 10, new int[] { 2, 0, 4, 1 }, 0);
	public static final ArmorMaterial ELEMENT_MAIN_ARMOR_MATERIAL = EnumHelper.addArmorMaterial("ELEMENTMAIN", "simplemagic:EleMain", 15, new int[] { 2, 5, 4, 1 }, 0);
	public static final ArmorMaterial ELEMENT_ALMIGHTY_ARMOR_MATERIAL = EnumHelper.addArmorMaterial("ELEMENTALMIGHTY", "simplemagic:EleAlm", 25, new int[] { 2, 5, 4, 1 }, 0);

	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		event.getModMetadata().autogenerated = false;
		event.getModMetadata().url = "http://www.planetminecraft.com/mod/simple-magic-v1/";
		event.getModMetadata().authorList.add("person124");
		event.getModMetadata().description = "Magic is Simple, is it not? Thank you ThirstBuster on PMC for some of the textures.";
		event.getModMetadata().logoFile = "assets/simplemagic/textures/logo.png";

		MinecraftForge.EVENT_BUS.register(new EventEntityDammage());
	}

	@EventHandler
	public void init(FMLInitializationEvent event) {
		isClient = event.getSide() == Side.CLIENT;
		if (isClient) renderItem = Minecraft.getMinecraft().getRenderItem();

		proxy.init();
		Base.init();
		Earth.init();
		Limbo.init();
		Fire.init();
		Fragor.init();
		Life.init();
	}

	@EventHandler
	public void postInit(FMLPostInitializationEvent event) {
		//MinecraftForge.EVENT_BUS.register(new EventPlayerCape());
	}

	public static void registerItem(Item item) {
		String name = item.getUnlocalizedName().replace("item.", "");
		GameRegistry.registerItem(item, name);
		if (isClient) renderItem.getItemModelMesher().register(item, 0, new ModelResourceLocation("simplemagic:" + name, "inventory"));
	}

	public static void registerBlock(Block block) {
		String name = block.getUnlocalizedName().replace("tile.", "");
		GameRegistry.registerBlock(block, name);
		if (isClient) renderItem.getItemModelMesher().register(Item.getItemFromBlock(block), 0, new ModelResourceLocation("simplemagic:" + name, "inventory"));
	}

	// *Earth and *Limbo
	// *Fire and *Fragor(Explosive/Creeper)
	// Life and Air
	// Time and Darkness
	// Water and Porcus(Pig)
	// Space and Vacca(Cow)
	// Light and Aranea(Spider)
	// Death

}
